{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;ACtI+B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,uBAAuB,UAAU,MAAM,UAAU;AACjD,mDAAmD,WAAW;AAC9D;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,+DAAW;AACb;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,sCAAsC,kCAAkC;AACxE;AACA;AACA;AACA;AACA;AACA,2CAA2C,KAAK,MAAM,QAAQ;AAC9D,uEAAuE,MAAM;AAC7E,iEAAiE,MAAM;AACvE;AACA;AACA,sEAAsE,MAAM;AAC5E;AACA;AACA,uBAAuB;AACvB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACzH2B;AACA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAkC;AAC3D;AACA,YAAY;AACZ;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,cAAc;AACd;AACA,iDAAiD;AACjD,cAAc;AACd;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA,UAAU;AACV;AACA,MAAM,4DAAQ;AACd;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAS;AACb;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAU;AAChB,KAAK;AACL;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACvHrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACC;AACD;;;;;;;;;;;;;;;ACrErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,IAAI;AACJ;AACA;AACA;AACA,8BAA8B,WAAW;AACzC,IAAI;AACJ;AACA;AACA;AACA,uDAAuD;AACvD,sCAAsC;AACtC,6CAA6C;AAC7C;AACA,2CAA2C;AAC3C;AACA;AACA,8BAA8B;AAC9B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,MAAM;AACN,wCAAwC;AACxC;AACA;AACA,iDAAiD,OAAO,MAAM;AAC9D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,MAAM;AACN,wCAAwC;AACxC;AACA;AACA,iDAAiD,OAAO,MAAM;AAC9D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA,yDAAyD;AACzD;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;AC3NtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACjDpB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC/DrB;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,eAAe,mCAAmC;AAClD;AACA,GAAG;AACH;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,IAAI,YAAY,WAAW,IAAI;AACtE;AACA;AACA;AACA;AACA;AACoB;AACG;;;;;;;UChCvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACF;AACE;AACE;AACM;;AAE5C;AACA;AACA;AACA,UAAU,yDAAS;AACnB;AACA;;AAEA,EAAE,yDAAI;AACN;AACA;AACA;AACA;AACA;AACA,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,yDAAI;AACN,EAAE,0DAAK;AACP,EAAE,2DAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,GAAG","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n  /*  =========   CALCULIATOR */\r\n  /* FORMULA : MEN = (88.36 + (13,4 * weight, kg) + (4,8 * height, cm) - (5,7 * age, eyrs)) * coof dayActive \r\n  /* FORMULA : WOMEN = (447.6 + (9,2 * weight, kg) + (3,1 * height, cm) - (4,3 * age, eyrs)) * coof dayActive \r\n\r\n    коэфициэнт Активности статичный мы добавили в верстку как атрибуты: data-ratio=\"1.2\" - низкий уровень, data-ratio=\"1.375\" - невысокий ... \r\n  */\r\n\r\n  const result = document.querySelector(\".calculating__result span\"); // сюда выводим результат\r\n\r\n  let sex, height, weight, age, ratio;\r\n\r\n  // проверяем или есть данные в localStorage\r\n  if (localStorage.getItem(\"sex\")) {\r\n    sex = localStorage.getItem(\"sex\");\r\n  } else {\r\n    sex = \"female\"; // что то типа по умолчанию если в хранилище нет\r\n    localStorage.setItem(\"sex\", \"female\");\r\n  }\r\n\r\n  if (localStorage.getItem(\"ratio\")) {\r\n    ratio = localStorage.getItem(\"ratio\");\r\n  } else {\r\n    ratio = 1.375; // что то типа по умолчанию если в хранилище нет\r\n    localStorage.setItem(\"ratio\", 1.375);\r\n  }\r\n\r\n  // = функция для опредиления класса активности с учетом localStorage\r\n  function initLocalSettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach((item) => {\r\n      item.classList.remove(activeClass);\r\n      if (item.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\r\n        item.classList.add(activeClass);\r\n      }\r\n      if (item.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) {\r\n        item.classList.add(activeClass);\r\n      }\r\n    });\r\n  }\r\n  initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n  initLocalSettings(\r\n    \".calculating__choose_big div\",\r\n    \"calculating__choose-item_active\"\r\n  );\r\n\r\n  // = функция подсчета\r\n  function calcTotal() {\r\n    // проверка на пополненость всех полей\r\n    if (!sex || !height || !weight || !age || !ratio) {\r\n      result.textContent = \"-__- \";\r\n      return;\r\n    }\r\n\r\n    if (sex === \"female\") {\r\n      result.textContent = Math.round(\r\n        (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio\r\n      );\r\n    } else {\r\n      result.textContent = Math.round(\r\n        (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\r\n      );\r\n    }\r\n  }\r\n  calcTotal();\r\n\r\n  // = получение данных со статичных блоков\r\n  function getStaticInformation(parentSelector, activeClass) {\r\n    const elements = document.querySelectorAll(`${parentSelector} div`);\r\n\r\n    // получаем все дивы\r\n    elements.forEach((item) => {\r\n      item.addEventListener(\"click\", (e) => {\r\n        // если блок имеент атрибут ratio(data-ratio=\"1.2) то берем его, если нет то берем ID\r\n        if (e.target.getAttribute(\"data-ratio\")) {\r\n          ratio = +e.target.getAttribute(\"data-ratio\");\r\n          //сохраняем выбор пользователя в localStorage\r\n          localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\"));\r\n        } else {\r\n          sex = e.target.getAttribute(\"id\");\r\n          localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n        }\r\n\r\n        // add classActive\r\n        elements.forEach((item) => {\r\n          item.classList.remove(activeClass);\r\n        });\r\n\r\n        e.target.classList.add(activeClass);\r\n\r\n        calcTotal();\r\n      });\r\n    });\r\n  }\r\n  // для блока пола\r\n  getStaticInformation(\"#gender\", \"calculating__choose-item_active\");\r\n  // для блока активности\r\n  getStaticInformation(\r\n    \".calculating__choose_big\",\r\n    \"calculating__choose-item_active\"\r\n  );\r\n\r\n  // = получение данных с input . Одна функц для всех\r\n  function getDynamicInformation(selector) {\r\n    const input = document.querySelector(selector);\r\n\r\n    // ПРОВЕРКА если в строке есть НЕ ЧИСЛА\r\n    input.addEventListener(\"input\", () => {\r\n      if (input.value.match(/\\D/g)) {\r\n        input.style.border = \"1px solid red\";\r\n      } else {\r\n        input.style.border = \"none\";\r\n      }\r\n      //проверка что именно ввел пользователь (вес, рост или возраст)\r\n      switch (input.getAttribute(\"id\")) {\r\n        case \"height\":\r\n          height = +input.value;\r\n          break;\r\n        case \"weight\":\r\n          weight = +input.value;\r\n          break;\r\n        case \"age\":\r\n          age = +input.value;\r\n          break;\r\n      }\r\n      calcTotal();\r\n    });\r\n  }\r\n  getDynamicInformation(\"#height\");\r\n  getDynamicInformation(\"#weight\");\r\n  getDynamicInformation(\"#age\");\r\n}\r\n\r\nexport default calc;\r\n","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n  // +CARTS with class\r\n\r\n  class MenuCard {\r\n    constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n      this.src = src;\r\n      this.alt = alt;\r\n      this.title = title;\r\n      this.descr = descr;\r\n      this.price = price;\r\n      this.classes = classes; // на случай если зохотим потом добавлять какоето клыссы(вернет массив классов или вернет пустой массив)\r\n      this.transfer = 27;\r\n      this.changeToUAH(); //сразу вызвали метод который вернет переобраз цену с доллара на грн\r\n      this.parent = document.querySelector(parentSelector);\r\n    }\r\n\r\n    changeToUAH() {\r\n      this.price = this.price * this.transfer;\r\n    }\r\n\r\n    render() {\r\n      // заггрузка карточки на страницу\r\n      const element = document.createElement(\"div\");\r\n\r\n      if (this.classes.length === 0) {\r\n        this.element = \"menu__item\"; // устанавливаем класс по умолчанию\r\n        element.classList.add(this.element);\r\n      } else {\r\n        this.classes.forEach((className) => element.classList.add(className));\r\n      }\r\n\r\n      element.innerHTML = `\r\n            <img src=${this.src} alt=${this.alt} />\r\n            <h3 class=\"menu__item-subtitle\">Меню ${this.title}</h3>\r\n            <div class=\"menu__item-descr\">\r\n              ${this.descr}\r\n            </div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n              <div class=\"menu__item-cost\">Цена:</div>\r\n              <div class=\"menu__item-total\"><span>${this.price}</span> грн/день\r\n            </div>`;\r\n\r\n      this.parent.append(element);\r\n    }\r\n  }\r\n\r\n  getResource(\"http://localhost:3000/menu\").then((data) => {\r\n    // строим наши карточки на основе данных с сервера\r\n    //data.forEach((obj) => {\r\n    //new MenuCard(obj.img, obj.altimg, obj.title, obj.descr, obj.price).render();\r\n\r\n    data.forEach(({ img, altimg, title, descr, price }) => {\r\n      // пришедшие данные деструктурируем (чтобы не писать каджый раз obj.img, obj.altimg...)\r\n      new MenuCard(\r\n        img,\r\n        altimg,\r\n        title,\r\n        descr,\r\n        price,\r\n        \".menu .container\"\r\n      ).render();\r\n    });\r\n  });\r\n\r\n  // работа с  сервером через AXIOS\r\n\r\n  // axios.get(\"http://localhost:3000/menu\").then((item) => {\r\n  //   item.data.forEach(({ img, altimg, title, descr, price }) => {\r\n  //     // пришедшие данные деструктурируем (чтобы не писать каджый раз obj.img, obj.altimg...)\r\n  //     new MenuCard(\r\n  //       img,\r\n  //       altimg,\r\n  //       title,\r\n  //       descr,\r\n  //       price,\r\n  //       \".menu .container\"\r\n  //     ).render();\r\n  //   });\r\n  // });\r\n\r\n  // ВТОРОЙ ВАРИАНТ СОЗДАНИЯ КАРТОЧЕК БЕЗ ИСПОЛЬЗОВАНИЯ КЛАССОВ (создает верстку на лету)\r\n\r\n  /*  getResource(\"http://localhost:3000/menu\").then((data) => {\r\n                      createCard(data);\r\n                    });\r\n\r\n                    function createCard(data) {\r\n                      // то что пришло с сервера\r\n                      data.forEach(({ img, altimg, title, descr, price }) => {\r\n                        const element = document.createElement(\"div\");\r\n\r\n                        element.classList.add(\"menu__item\");\r\n\r\n                        element.innerHTML = `\r\n                                <img src=${img} alt=${altimg} />\r\n                                <h3 class=\"menu__item-subtitle\">Меню ${title}</h3>\r\n                                <div class=\"menu__item-descr\"> ${descr}</div>\r\n                                <div class=\"menu__item-divider\"></div>\r\n                                <div class=\"menu__item-price\"><div class=\"menu__item-cost\">Цена:</div>\r\n                                <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n                                `;\r\n                        document.querySelector(\".menu .container\").append(element);\r\n                      });\r\n                    } */\r\n\r\n  /* ЭТО было до того как мы получили данные с сервера. Все прописывали руками\r\n\r\n  new MenuCard(\r\n    \"img/tabs/vegy.jpg\",\r\n    \"vegy\",\r\n    \"Фитнес\",\r\n    'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    9,\r\n    \".menu .container\",\r\n    \"menu__item\"\r\n  ).render(); */\r\n}\r\n\r\nexport default cards;\r\n","import { closeModal, openModal } from \"./modal\";\r\nimport { postData } from \"../services/services\";\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n  ////// =======>  ОТправка ДАнныйх формы на сервер\r\n\r\n  /* так как у нас 2 формы, что бы не повторять код напишем функцию которую будим вызывать для отправки каждой формы!!! */\r\n  // для этой задачи будем использ устаревший метод XMLHttpRequest()\r\n\r\n  const forms = document.querySelectorAll(formSelector);\r\n\r\n  const message = {\r\n    loading: \"img/form/spinner.svg\",\r\n    success: \"Спасибо! Скоро с вами свяжемся\",\r\n    failure: \"Что-то пошло не так...\",\r\n  };\r\n\r\n  forms.forEach((item) => {\r\n    //приминение функции отплавки формы к каждой форме\r\n    bindPostData(item);\r\n  });\r\n\r\n  function bindPostData(form) {\r\n    form.addEventListener(\"submit\", (e) => {\r\n      // общение с пользователем\r\n      // отменям стандартное поведение браузера\r\n      e.preventDefault();\r\n\r\n      const statusMessage = document.createElement(\"img\");\r\n      statusMessage.src = message.loading;\r\n      statusMessage.style.cssText = `\r\n        display: block;\r\n        margin: 0 auto;\r\n      `;\r\n      statusMessage.textContent = message.loading;\r\n      // вставляем на страницу\r\n      form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n      // отправка на сервер (FormData)\r\n      const formData = new FormData(form);\r\n\r\n      //   fetch(\"server.php\", {\r\n      //     // отправка на сервер\r\n      //     method: \"POST\",\r\n      //     //headers: {\"Content-tpe\": \"application/json\"},// только в случае отправки формата JSON\r\n      //     body: formData, //зависит от формата сервера formData or JSON\r\n      //   })\r\n      //     .then((data) => data.text()) // переобразовали результат в текстовый формат\r\n      //     .then((data) => {\r\n      //       //обработка результата запроса\r\n      //       console.log(data); // data это то что вернул сервер\r\n      //       showThanksModal(message.success);\r\n      //       statusMessage.remove();\r\n      //     })\r\n      //     .catch(() => {\r\n      //       showThanksModal(message.failure); // в случае какой либо ошибки\r\n      //     })\r\n      //     .finally(() => {\r\n      //       form.reset();\r\n      //     });\r\n      // });\r\n\r\n      // отправка на сервер (JSON)\r\n\r\n      // преобр. FormData => JSON\r\n      const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n      // fetch(\"server.php\", {\r\n      //   // отправка на сервер\r\n      //   method: \"POST\",\r\n      //   headers: { \"Content-tpe\": \"application/json\" }, // только в случае отправки формата JSON\r\n      //   body: json, //зависит от формата сервера formData or JSON\r\n      // });\r\n\r\n      postData(\"http://localhost:3000/requests\", json) //http://localhost:3000/requests => адрес БД через наш вертуальный сервер\r\n        //.then((data) => data.text()) // переобразовали результат в текстовый формат\r\n        .then((data) => {\r\n          //обработка результата запроса\r\n          console.log(data); // data это то что вернул сервер\r\n          showThanksModal(message.success);\r\n          statusMessage.remove();\r\n        })\r\n        .catch(() => {\r\n          showThanksModal(message.failure); // в случае какой либо ошибки\r\n        })\r\n        .finally(() => {\r\n          form.reset();\r\n        });\r\n    });\r\n  }\r\n\r\n  // МОДАЛЬНОЕ ОКНО ПРИ ОТПРАВКЕ ФОРМЫ\r\n\r\n  function showThanksModal(message) {\r\n    const prevModalDialog = document.querySelector(\".modal__dialog\");\r\n\r\n    prevModalDialog.classList.add(\"hide\");\r\n    openModal(\".modal\", modalTimerId);\r\n    // change modal (один модуль заменяем другим)\r\n    const thanksModal = document.createElement(\"div\");\r\n    thanksModal.classList.add(\"modal__dialog\");\r\n    thanksModal.innerHTML = `\r\n    <div class=\"modal__content\">\r\n      <div class=\"modal__close\" data-close>&times;</div>\r\n      <div class=\"modal__title\">${message}</div>\r\n    </div>\r\n    `;\r\n    //загружаем созданую модалку на страницу\r\n    document.querySelector(\".modal\").append(thanksModal);\r\n\r\n    //на случай если клиент еще раз откроет модалку=нужно вернуть старый вид окна\r\n    setTimeout(() => {\r\n      thanksModal.remove();\r\n      prevModalDialog.classList.add(\"show\");\r\n      prevModalDialog.classList.remove(\"hide\");\r\n      closeModal(\".modal\");\r\n    }, 4000);\r\n  }\r\n}\r\n\r\nexport default forms;\r\n","function openModal(modalSelector, modalTimerId) {\r\n  const modal = document.querySelector(modalSelector);\r\n  modal.classList.add(\"show\");\r\n  modal.classList.remove(\"hide\");\r\n  //блокируем прокрутку страницы при запyщеной модалке\r\n  document.body.style.overflow = \"hidden\";\r\n\r\n  if (modalTimerId) {\r\n    clearInterval(modalTimerId); //если пользователь открыл модалку сам тогда модалка с таймера удалится\r\n  }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n  // hide modal\r\n  const modal = document.querySelector(modalSelector);\r\n  modal.classList.add(\"hide\");\r\n  modal.classList.remove(\"show\");\r\n  document.body.style.overflow = \"\"; // scroll default\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n  ////// =======> Модальное ОКНО при нажатии связатся с нами. по умолч скрыто\r\n\r\n  const modalTrigger = document.querySelectorAll(triggerSelector),\r\n    modal = document.querySelector(modalSelector);\r\n\r\n  modalTrigger.forEach((item) => {\r\n    //показываем модалку\r\n    item.addEventListener(\"click\", () => {\r\n      openModal(modalSelector, modalTimerId);\r\n      window.removeEventListener(\"scroll\", showModalByScroll); //delete listener который при скроле если модалка была уже включена\r\n    });\r\n  });\r\n\r\n  // закритие моделки при клике на пустое место\r\n  modal.addEventListener(\"click\", function (e) {\r\n    if (e.target === modal || e.target.getAttribute(\"data-close\") == \"\") {\r\n      closeModal(modalSelector);\r\n    }\r\n  });\r\n\r\n  // close from kaybord ESC\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\r\n      // when modal window is open\r\n      //евент таргет отслеживает клаыишу на которую нажали (ее код Escape)\r\n      closeModal(modalSelector);\r\n    }\r\n  });\r\n\r\n  // OPEN MODAL WHEN SCROLL DOWN & OVER TIME\r\n\r\n  // SCROLL\r\n  function showModalByScroll() {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n      document.documentElement.scrollHeight\r\n    ) {\r\n      //значит долистал до конца страници\r\n      //window.pageYOffset => прокрученая не видимая верхняя часть окна\r\n      openModal(modalSelector, modalTimerId);\r\n      window.removeEventListener(\"scroll\", showModalByScroll); //delete listener\r\n    }\r\n  }\r\n  window.addEventListener(\"scroll\", showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport { closeModal };\r\nexport { openModal };\r\n","function slider({\r\n  container,\r\n  slide,\r\n  nextArrow,\r\n  prevArrow,\r\n  totalCounter,\r\n  currentCounter,\r\n  wrapper,\r\n  field,\r\n}) {\r\n  //// SLIDER\r\n\r\n  const prev = document.querySelector(prevArrow),\r\n    next = document.querySelector(nextArrow),\r\n    current = document.querySelector(currentCounter),\r\n    total = document.querySelector(totalCounter),\r\n    slides = document.querySelectorAll(slide),\r\n    slider = document.querySelector(container),\r\n    slidesWrapper = document.querySelector(wrapper),\r\n    slidesField = document.querySelector(field), // блок в которое поместим все слайды в ширину\r\n    width = window.getComputedStyle(slidesWrapper).width; // получили ширину окошка просмотра слайда\r\n\r\n  let slideIndex = 1;\r\n\r\n  // ================ SLIDER 2  типа КАРУСЕЛЬ\r\n  let offset = 0; //ориентир отступа ширини для показа нужного слайда (смищение блока с слайдами)\r\n\r\n  // нумерация\r\n  if (slides.length < 10) {\r\n    total.textContent = `0${slides.length}`;\r\n  } else {\r\n    total.textContent = slides.length;\r\n  }\r\n  if (slideIndex < 10) {\r\n    current.textContent = `0${slideIndex}`;\r\n  } else {\r\n    current.textContent = slideIndex;\r\n  }\r\n\r\n  slidesField.style.width = 100 * slides.length + \"%\"; //увеличили ширину чтоб поместились все слайды в ширину\r\n  slidesField.style.display = \"flex\"; // расположили слайды в одну линию\r\n  slidesField.style.transition = \"0.5s all\"; // чтобы плавно передвигалось\r\n\r\n  slidesWrapper.style.overflow = \"hidden\"; //скрываем все что выходит за окошко\r\n\r\n  slides.forEach((item) => {\r\n    item.style.width = width; //точно знаем что все слайды равны нашему окошку\r\n  });\r\n\r\n  function deleteNotDigits(str) {\r\n    return +str.replace(/\\D/g, \"\");\r\n  }\r\n\r\n  next.addEventListener(\"click\", () => {\r\n    //сейчас в width лежит строка ('400px') нужно перевести в число + отрезать 'px'\r\n    if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n      //заменил буквы на 'ничего'\r\n      offset = 0; //долистал до конца переmотка в начало\r\n    } else {\r\n      offset += deleteNotDigits(width); // если норм то ориентир увеличиваенся на ширину еще 1 слайда\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; //сдвигание блока в лево (минусоввое значение = лево)\r\n\r\n    //numbers\r\n    if (slideIndex == slides.length) {\r\n      slideIndex = 1;\r\n    } else {\r\n      slideIndex++;\r\n    }\r\n\r\n    if (slideIndex < 10) {\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      current.textContent = slideIndex;\r\n    }\r\n\r\n    // dots active\r\n    dots.forEach((dot) => (dot.style.opacity = \".5\"));\r\n    dots[slideIndex - 1].style.opacity = 1;\r\n  });\r\n\r\n  prev.addEventListener(\"click\", () => {\r\n    //сейчас в prev лежит строка ('400px') нужно перевести в число + отрезать 'px'\r\n    if (offset == 0) {\r\n      offset = deleteNotDigits(width) * (slides.length - 1); //долистал до начала перезод в конуц\r\n    } else {\r\n      offset -= deleteNotDigits(width); // если норм то ориентир уменьшается на ширину еще 1 слайда\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; //сдвигание блока в лево (минусоввое значение = лево)\r\n\r\n    //numbers\r\n    if (slideIndex == 1) {\r\n      slideIndex = slides.length;\r\n    } else {\r\n      slideIndex--;\r\n    }\r\n\r\n    if (slideIndex < 10) {\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      current.textContent = slideIndex;\r\n    }\r\n\r\n    // dots active\r\n    dots.forEach((dot) => (dot.style.opacity = \".5\"));\r\n    dots[slideIndex - 1].style.opacity = 1;\r\n  });\r\n\r\n  // navigations dot of slider\r\n\r\n  slider.style.position = \"relative\";\r\n  // блок для точек\r\n  const indicators = document.createElement(\"ol\"),\r\n    dots = [];\r\n  indicators.classList.add(\"carousel-indicators\");\r\n  indicators.style.cssText = `\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 15;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-right: 15%;\r\n  margin-left: 15%;\r\n  list-style: none;\r\n`;\r\n  slider.append(indicators);\r\n\r\n  // точки (сколько слайдов столько и точек)\r\n  for (let i = 0; i < slides.length; i++) {\r\n    const dot = document.createElement(\"li\");\r\n    dot.setAttribute(\"data-slide-to\", i + 1); // устанавлеваем каждой точке свой атрибут(идентификатор)\r\n    dot.style.cssText = `\r\n    box-sizing: content-box;\r\n    flex: 0 1 auto;\r\n    width: 30px;\r\n    height: 6px;\r\n    margin-right: 3px;\r\n    margin-left: 3px;\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border-top: 10px solid transparent;\r\n    border-bottom: 10px solid transparent;\r\n    opacity: 0.5;\r\n    transition: opacity 0.6s ease;\r\n  `;\r\n    if (i == 0) {\r\n      dot.style.opacity = 1;\r\n    }\r\n    indicators.append(dot);\r\n    dots.push(dot);\r\n  }\r\n\r\n  // click for dots\r\n\r\n  dots.forEach((dot) => {\r\n    dot.addEventListener(\"click\", (e) => {\r\n      const slideTo = e.target.getAttribute(\"data-slide-to\");\r\n\r\n      slideIndex = slideTo;\r\n      offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n      dots.forEach((dot) => (dot.style.opacity = \".5\")); // activ dot\r\n      dots[slideIndex - 1].style.opacity = 1;\r\n\r\n      if (slideIndex < 10) {\r\n        current.textContent = `0${slideIndex}`;\r\n      } else {\r\n        current.textContent = slideIndex;\r\n      }\r\n    });\r\n  });\r\n\r\n  // ======== slider 1 ОБЫЧНЫЙ СЛАЙДЕР\r\n\r\n  // showSlides(slideIndex);\r\n\r\n  // if (slides.length < 10) {\r\n  //   total.textContent = `0${slides.length}`;\r\n  // } else {\r\n  //   total.textContent = slides.length;\r\n  // }\r\n\r\n  // function showSlides(n) {\r\n  //   if (n > slides.length) {\r\n  //     slideIndex = 1;\r\n  //   }\r\n  //   if (n < 1) {\r\n  //     slideIndex = slides.length;\r\n  //   }\r\n\r\n  //   slides.forEach((item) => (item.style.display = \"none\"));\r\n  //   slides[slideIndex - 1].style.display = \"block\";\r\n\r\n  //   if (slideIndex < 10) {\r\n  //     current.textContent = `0${slideIndex}`;\r\n  //   } else {\r\n  //     current.textContent = slideIndex;\r\n  //   }\r\n  // }\r\n\r\n  // function plusSlides(n) {\r\n  //   showSlides((slideIndex += n));\r\n  // }\r\n\r\n  // prev.addEventListener(\"click\", () => {\r\n  //   plusSlides(-1);\r\n  // });\r\n  // next.addEventListener(\"click\", () => {\r\n  //   plusSlides(1);\r\n  // });\r\n}\r\n\r\nexport default slider;\r\n","function tabs(\r\n  tabsSelector,\r\n  tabsContentSelector,\r\n  tabsParentSelector,\r\n  activeClass\r\n) {\r\n  /////////////  TABS //////////////////\r\n\r\n  const tabs = document.querySelectorAll(tabsSelector),\r\n    tabsContent = document.querySelectorAll(tabsContentSelector),\r\n    tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n  // Hid TAB Content\r\n\r\n  function hideTabContent() {\r\n    tabsContent.forEach((item) => {\r\n      item.classList.add(\"hide\");\r\n      item.classList.remove(\"show\", \"fade\");\r\n    });\r\n\r\n    tabs.forEach((item) => {\r\n      item.classList.remove(activeClass);\r\n    });\r\n  }\r\n  //\r\n  function showTabContent(i = 0) {\r\n    tabsContent[i].classList.add(\"show\", \"fade\");\r\n    tabsContent[i].classList.remove(\"hide\");\r\n    tabs[i].classList.add(activeClass);\r\n  }\r\n\r\n  hideTabContent();\r\n  showTabContent();\r\n\r\n  // события табсов через делегирование\r\n  tabsParent.addEventListener(\"click\", (e) => {\r\n    const target = e.target;\r\n\r\n    if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n      tabs.forEach((item, i) => {\r\n        if (target == item) {\r\n          hideTabContent();\r\n          showTabContent(i);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport default tabs;\r\n","function timer(id, deadline) {\r\n  //////////////////////  TIMER  ////////////////////////\r\n\r\n  // определяем разницу между теккущим временнем и дедЛайном\r\n  function getTimeRemaining(endtime) {\r\n    let days, hours, minutes, seconds;\r\n    const t = Date.parse(endtime) - Date.parse(new Date()); // разница в милисикундах\r\n\r\n    if (t <= 0) {\r\n      days = 0;\r\n      hours = 0;\r\n      minutes = 0;\r\n      seconds = 0;\r\n    } else {\r\n      (days = Math.floor(t / (1000 * 60 * 60 * 24))),\r\n        (hours = Math.floor((t / (1000 * 60 * 60)) % 24)),\r\n        (minutes = Math.floor((t / 1000 / 60) % 60)),\r\n        (seconds = Math.floor((t / 1000) % 60));\r\n    }\r\n\r\n    return {\r\n      total: t,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  }\r\n\r\n  function getZero(num) {\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    } else return num;\r\n  }\r\n\r\n  // устанавлеваем часы на страницу\r\n  function setClock(selector, endtime) {\r\n    const timer = document.querySelector(selector),\r\n      days = timer.querySelector(\"#days\"),\r\n      hours = timer.querySelector(\"#hours\"),\r\n      minutes = timer.querySelector(\"#minutes\"),\r\n      seconds = timer.querySelector(\"#seconds\"),\r\n      timeInterval = setInterval(updateClock, 1000);\r\n\r\n    updateClock(); //вызвали здесь чтоб цбрать баг со старыми значениями таймера\r\n\r\n    function updateClock() {\r\n      const t = getTimeRemaining(endtime);\r\n\r\n      days.innerHTML = getZero(t.days);\r\n      hours.innerHTML = getZero(t.hours);\r\n      minutes.innerHTML = getZero(t.minutes);\r\n      seconds.innerHTML = getZero(t.seconds);\r\n\r\n      // остановка таймера при стичении времени\r\n      if (t.total <= 0) {\r\n        clearInterval(timeInterval);\r\n      }\r\n    }\r\n  }\r\n  setClock(id, deadline);\r\n}\r\n\r\nexport default timer;\r\n","// ВЕСЬ футкционал по общению с СЕРВЕРОМ выносим в отдельнцю функцию\r\n\r\nconst postData = async (url, data) => {\r\n  //async говорит что это асинхр код. await = места где нужно дождаться результата\r\n  const res = await fetch(url, {\r\n    // Это АСИНХРОННЫЙ код. пока будет формироватся запрос  return res.json(); зохочет вернуть ответ которого ЕЩЕ не будет!!!!\r\n    method: \"POST\",\r\n    headers: { \"Content-tpe\": \"application/json\" }, // только в случае отправки формата JSON\r\n    body: data,\r\n  });\r\n\r\n  return await res.json(); // ПРОМИС (перед выдачей результата нцжно дождаться его выполнения)\r\n};\r\n\r\nasync function getResource(url) {\r\n  let res = await fetch(url);\r\n\r\n  /* так как в промиссах с использованием .cath не считается ошибкой отсутствие соединения с сервером....\r\n    мы проверяем это условиями с использованием НОВЫХ свойств ПРОМИСА\r\n\r\n    = .ok =====> значит все прошло как нужно\r\n    = .status ======>  какой статус действия\r\n  */\r\n\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url}, status: ${res.status}`); //  throw => вывод в консоль.. new Error = созданый вручную обьект ошибки (сообщение ошибки )\r\n  }\r\n\r\n  return await res.json();\r\n}\r\n\r\nexport { postData };\r\nexport { getResource };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from \"./modules/tabs\";\nimport modal from \"./modules/modal\";\nimport timer from \"./modules/timer\";\nimport cards from \"./modules/cards\";\nimport calc from \"./modules/calc\";\nimport forms from \"./modules/forms\";\nimport slider from \"./modules/slider\";\nimport { openModal } from \"./modules/modal\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  // time\n  const modalTimerId = setTimeout(\n    () => openModal(\".modal\", modalTimerId),\n    50000\n  );\n\n  tabs(\n    \".tabheader__item\",\n    \".tabcontent\",\n    \".tabheader__items\",\n    \"tabheader__item_active\"\n  );\n  modal(\"[data-modal]\", \".modal\", modalTimerId);\n  timer(\".timer\", \"2023-01-01\");\n  cards();\n  calc();\n  forms(\"form\", modalTimerId);\n  slider({\n    container: \".offer__slider\",\n    nextArrow: \".offer__slider-next\",\n    prevArrow: \".offer__slider-prev\",\n    slide: \".offer__slide\",\n    totalCounter: \"#total\",\n    currentCounter: \"#current\",\n    wrapper: \".offer__slider-wrapper\",\n    field: \".offer__slide-inner\",\n  });\n}); //npx json-server db.json\n"],"names":[],"sourceRoot":""}